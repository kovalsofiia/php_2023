Текстові файли:
Відкриття текстових файлів: Для відкриття текстових файлів використовується функція fopen(). Режим відкриття 'r' дозволяє лише читання, 'w' - лише запис, 'a' - запис з додаванням до кінця файлу.

Читання з текстових файлів:

fgets(): Читає один рядок із файлу.
fread(): Читає вказану кількість байтів із файлу.
file_get_contents(): Отримує весь вміст файлу як рядок.
Запис у текстові файли:

fwrite(): Записує рядок в файл.
file_put_contents(): Замінює весь вміст файлу новим рядком.
Робота із рядками в текстових файлах: PHP надає багато функцій для операцій над рядками, такі як strlen() для визначення довжини рядка, strpos() для пошуку підрядка, і str_replace() для заміни тексту в рядку.

Робота з файлами CSV:
CSV (Comma-Separated Values): CSV - це формат для представлення даних у вигляді текстового файлу, де значення розділяються комами (або іншим роздільником, який можна вказати).

Читання з файлів CSV:

Для читання з файлу CSV використовуйте fgetcsv(). Вона автоматично розпізнає коми та інші роздільники, розбиває рядок на поля і повертає масив значень.
Як приклад: $row = fgetcsv($file); читає наступний рядок із файлу CSV у вигляді масиву.
Запис у файли CSV:

Для запису в файл CSV використовуйте fputcsv(). Вона бере масив значень та записує їх в файл, автоматично розділяючи комами.
Приклад: fputcsv($file, $row); записує масив $row у файл CSV.
Робота з роздільниками: Ви можете вказати свій власний роздільник для CSV-файлів за допомогою параметра delimiter у функціях fgetcsv() та fputcsv(). За замовчуванням використовується кома.

Робота з текстовими файлами та файлами CSV - важлива частина обробки даних в PHP, особливо коли вам потрібно читати або записувати структуровану інформацію, таку як дані користувачів, інвентар або звіти. Доступ до файлової системи дозволяє розробникам працювати з даними на більш низькому рівні та створювати потужні додатки для обробки і аналізу інформації.